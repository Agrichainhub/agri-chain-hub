// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User schema for AgriChainHub
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  firstname String
  lastname  String
  username  String
  email     String   @unique
  password  String
  emailVerified      DateTime?
  image              String?
  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profile   Profile?

  // Relations
  products Product[] // A farmer's products, empty if customer
  orders   Order[] // List of customer orders
}

model Profile {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  userId      String  @unique @db.ObjectId
  farmName    String?
  description String?
  location    String? // Location of farm or user
  contactInfo String?

  // Relations
  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Product {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  price        Float
  images       String[]
  tags         String[]
  availability Boolean  @default(true)
  description  String?
  farmerId     String   @db.ObjectId // Add this attribute

  // Relations
  farmer User    @relation(fields: [farmerId], references: [id])
  Order  Order[]
}

model Order {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  customerId String      @db.ObjectId
  productId  String      @db.ObjectId
  status     OrderStatus @default(PENDING)
  createdAt  DateTime    @default(now())

  // Relations
  customer User    @relation(fields: [customerId], references: [id])
  product  Product @relation(fields: [productId], references: [id])
}

enum UserRole {
  FARMER
  CUSTOMER
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
}
